############################# Platform SUT OS Configuration ##############################
[defaults]
# sut os
#       default_os_boot = redhat          : use below [redhat] section as sut configuration
#       default_os_boot = centos             but not support 'uefi_shell'
#       default_os_boot = ubuntu
#       default_os_boot = fedora
#       default_os_boot = vmware
#       default_os_boot = suse
#       default_os_boot = windows
# execute mode
#       execute_mode = outof_band         : run scripts in host end
#       execute_mode = in_band            : run scripts in sut end
# platform configuration
#       platform = wht                    : platform used for bios configuration,
#                                           e.g., `wht` means to load bios cfg from: steps_lib/config/wht_bios.py
#       socket_name = ICX                 : platform type
#       socket_name = SPR
#       socket_name = GNR
#       default_os_boot = red_hat

name = shpevspbkc007
socket_name = ICX
socket = 2
default_os_boot = vmware
execute_mode = outof_band
platform = wht


[redhat]
dev = Red Hat Enterprise Linux
ip = 192.168.0.2
port = 22
user = root
password = password
os_name = OS.RED_HAT


[fedora]
dev = Fedora
ip = 192.168.0.2
port = 22
user = root
password = password
os_name = OS.FEDORA


[ubuntu]
dev = ubuntu
ip = 192.168.0.2
port = 22
user = root
password = password
os_name = OS.UBUNTU


[suse]
dev = sles-secureboot
ip = 192.168.0.2
port = 22
user = root
password = password
os_name = OS.SUSE


[windows]
dev = Windows Boot Manager
ip = 192.168.0.3
port = 22
user = administrator
password = password
os_name = OS.WINDOWS


[vmware]
dev = VMware ESXi vsphere
ip = 10.239.183.74
port = 22
user = administrator@intel.com
password = Intel@123
os_name = OS.VMWARE


[centos]
dev = CentOS Linux
ip = 192.168.0.2
port = 22
user = root
password = password
os_name = OS.CENTOS


[uefi_shell]
dev = UEFI Internal Shell


########################## Platform Hardware Control Configuration: Main Section ###########################
# ac option
#       ac = pdu                : ac action with pdu (if more pdu required, use: pdu1, pdu2)
#       ac = rsc2               : ac action with rsc2
#       ac = soundwave          : ac action with soundwave (default option)
#       ac = capi               : ac action with capi api (not supported now)

# dc option
#       dc = rsc2               : ac action with rsc2
#       dc = soundwave          : ac action with soundwave (default option)
#       dc = capi               : ac action with capi api (not supported now)
#       dc = banino             : ac action with banino
#       dc = ipmi               : ac action with ipmim
#       dc = redfish            : ac action with redfish
#       dc = capi               : ac action with capi api (not supported now)

# reset option
#       reset = sutcmd          : reset with sut os/uefi cmd (default option)
#       reset = soundwave       : reset with soundwave
#       reset = rsc2            : reset with soundwave
#       reset = banino          : reset with soundwave
#       reset = ipmi            : reset with ipmi with outof-band
#       reset = ipmireset       : reset with ipmi with in-band ipmireset
#       reset = ipmicycle       : reset with ipmi with in-band ipmireset
#       reset = capi            : reset with capi api (not supported now)

# powerstate option
#       powerstate = soundwave  : use soundwave to read board voltage (default option)
#       powerstate = banino     : use banino to read board voltage
#       powerstate = rsc2       : use rsc2 to read board voltage
#       powerstate = ipmi       : use ipmi to read board voltage
#       powerstate = redfish    : use redfish to read board voltage
#       powerstate = capi       : use capi to read board voltage (not supported now)

# usb option
#       usb = soundwave         : use soundwave to attach pen-drive to host and sut (default option)
#       usb = banino            : use banino to attach pen-drive to host and sut
#       usb = rsc2              : use rsc2 to attach pen-drive to host and sut

# jumper option
#       jumper = soundwave      : use soundwave to set jumpers
#       jumper = banino         : use banino to set jumpers
#       jumper = rsc2           : use rsc2 to set jumpers
#       jumper = capi           : use capi to set jumpers (not supported now)

[hwcontrol]
ac = soundwave
dc = soundwave
reset = sutcmd
powerstate = soundwave
usb = soundwave
jumper = soundwave


[bios]
##### This section will be used by bios log #####
#       type = com      : use below serial [com] for bios log collection
#       type = sol      : use below serial-over-lan [sol] for bios log collection
type = com


[bmc]
enabled = True
tool = redfish
ip_0 = 10.239.181.108
ip_1 = None
ip_2 = None
ip_3 = None
user = root
password = 0penBmc1
vendor = intel


[dediprog_ifwi]
dpg_id_ifwi_0 = SF600961
chip_type_ifwi_0 = MX25L51245G
dpg_id_ifwi_1 =
chip_type_ifwi_1 =
dpg_id_ifwi_2 =
chip_type_ifwi_2 =
dpg_id_ifwi_3 =
chip_type_ifwi_3 =


[dediprog_bmc]
dpg_id_bmc_0 = DP025758
chip_type_bmc_0 = MX66L1G45G
dpg_id_bmc_1 =
chip_type_bmc_1 =
dpg_id_bmc_2 =
chip_type_bmc_2 =
dpg_id_bmc_3 =
chip_type_bmc_3 =


########################## Platform Hardware Control Configuration: Sub Section ##############################
[com]
port = COM100
baudrate = 115200
timeout = 5


[sol]
address = 10.239.181.194
port = 2200
timeout = 120
username = root
password = password


[soundwave]
port = COM101
baudrate = 115200
s3_detect = False


# Need below pin connection
#   AD_IN_2  -> P3V3
#   AD_IN_11 -> P3V3_AUX
high_main_voltage = 2.85
low_main_voltage = 0.8

# Need below pin connection only if s3_detect = True
#   AD_IN_10 -> SLPS4
high_memory_voltage = 2.85
low_memory_voltage = 0.45


[pdu]
# multiple outlet, such as 1,2
outlet = 1
ip = 10.239.181.249
user = admin
password = raritan


[banino]
ladybird_sn = 404242433